@mixin box-sizing( $type: border-box ) {
    -webkit-box-sizing: $type;
    -moz-box-sizing: $type;
    box-sizing: $type;
}

@mixin user-select() {
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
}

@mixin nowrap() {
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
}

@mixin center-block() {
    margin-left: auto;
    margin-right: auto;
}

@mixin clearfix() {
    &:before,
    &:after {
        content: " ";
        display: table;
    }
    &:after {
        clear: both;
    }
}

@mixin border-radius($radius) {
    -webkit-border-radius: $radius;
    -moz-border-radius: $radius;
    -ms-border-radius: $radius;
    border-radius: $radius;
}

/*usage @include border-radius(2px);*/

@mixin transition($args...) {
    -webkit-transition: $args;
    -moz-transition: $args;
    -ms-transition: $args;
    transition: $args;
}

/*usage @include transition(color .3s ease);*/

@mixin transform($args...) {
    -webkit-transform: $args;
    -moz-transform: $args;
    -ms-transform: $args;
    transform: $args;
}

/*usage @include transform(rotate(90deg));*/

@mixin pseudo($display: block, $pos: absolute, $content: '') {
    content: $content;
    display: $display;
    position: $pos;
}

/*usage @include pseudo($pos: relative);*/

@mixin responsive-ratio($x,$y, $pseudo: false) {
    $padding: unquote(( $y / $x ) * 100 + '%');
    @if $pseudo {
        &:before {
            @include pseudo($pos: relative);
            width: 100%;
            padding-top: $padding;
        }
    } @else {
        padding-top: $padding;
    }
}

/*usage @include responsive-ratio(16,9);*/

@mixin truncate($truncation-boundary) {
    max-width: $truncation-boundary;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
}

/* usage @include truncate(300px);*/

@function calculateRem($size) {
    $remSize: $size / 16px;
    @return $remSize * 1rem;
}

@mixin font-size($size) {
    font-size: $size;
    font-size: calculateRem($size);
}

/* usage @include font-size(14px);*/

@mixin matchesGrid($match-columns, $matches-in-column, $math-width, $math-height, $margin ) {
    .matches {
        width: $match-columns * ($math-width + $margin) - $margin + 0px;
        height: $matches-in-column * ($math-height + $margin) - $margin + 0px;
        position: relative;
        @include transform(translateZ(0));
        .column {
            position: absolute;
            top: 0;
            .match {
                margin-bottom: $margin;
            }
        }
        $class-column: column !default;
        @for $i from 0 through ($match-columns - 1) {
            .#{$class-column}-#{$i} {
                left: ($math-width + $margin) * $i + 0px;
            }
        }
    }
}

@mixin screenXXL {
  @media (min-width: #{$screenXL}) {
    @content;
  }
}

@mixin screenXL {
  @media (max-width: #{$screenXL - 1px}) {
    @content;
  }
}

@mixin screenL {
  @media (max-width: #{$screenL - 1px}) {
    @content;
  }
}

@mixin screenML {
  @media (max-width: #{$screenML - 1px}) {
    @content;
  }
}

@mixin screenM {
  @media (max-width: #{$screenM - 1px}) {
    @content;
  }
}

@mixin screenMS {
  @media (max-width: #{$screenMS - 1px}) {
    @content;
  }
}

@mixin screenS {
  @media (max-width: #{$screenS - 1px}) {
    @content;
  }
}

@mixin screenXS {
  @media (max-width: #{$screenXS - 1px}) {
    @content;
  }
}


@mixin hideScroll {
    -webkit-overflow-scrolling: touch;
    will-change: scroll-position;
    &:not(.touch){
        -ms-overflow-style: none;  // IE 10+
        &::-webkit-scrollbar {
            display: none;
        }
    }
    @-moz-document url-prefix() {
      overflow-x: hidden;
    }
}


@mixin sticky($top: 0){
    position: static;
    position: -webkit-sticky;
    position: -moz-sticky;
    position: -ms-sticky;
    position: -o-sticky;
    position: sticky;
    top: $top;
}
